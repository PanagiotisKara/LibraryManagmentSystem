package Book;

import Author.AuthorAdd;
import java.sql.Statement;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hliga
 */
public class BookAdd extends javax.swing.JFrame {
    static String driverClassName= "oracle.jdbc.driver.OracleDriver";
    static String url = "jdbc:oracle:thin:@192.168.6.21:1521:dblabs";
    static Connection dbConn=null;        
    static String username= "it175127";
    static String passwd= "fabrikofriendosmates7";
    static PreparedStatement insert=null;
    static PreparedStatement SelectAuthor=null;
    static PreparedStatement SelectCategory=null;
    static Statement st;
    static ResultSet rs;
    static int lastbookid;
    static Statement stat;
    static Statement stct;
    DefaultTableModel tblModel;
    DefaultTableModel tblModel1;
    DefaultTableModel tblModel2;
    
    /**
     * Creates new form BookAdd
     */
    public BookAdd()  {
        initComponents();
        myConnection();
        categorysearch();
        authorsearch();
        
    }
    
    public int getlastbookid(){
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try {
            dbConn= DriverManager.getConnection(url, username, passwd);
            String sql="select max(book_id) from book";
            st = dbConn.createStatement();
            rs= st.executeQuery(sql);
            if(rs.next()){
                lastbookid=rs.getInt(1);
                lastbookid++;
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
    return lastbookid;
    }
    
    void myConnection(){
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try {
            dbConn= DriverManager.getConnection(url, username, passwd);
            String insertString= "INSERT INTO book ( book_id, serialnum , bname, author_id, bdate_added, category_id, numcopies, publishinghouse, availablecopies) VALUES (?, ?, ?, ?, ?, ?, ? ,?,?)";
            insert = dbConn.prepareStatement(insertString);
        } catch (SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex !=null){
                System.out.println("Message: "+ ex.getMessage());
                ex=ex.getNextException();
            }
        }
    }
    
    public void selects() {
        
        
    }
    
    private void filter1 (String query){
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(tblModel1);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    
    private void filter2 (String query){
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(tblModel2);
        categtable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bookname = new javax.swing.JTextField();
        serialnum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        authorid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        categoryid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        numofcopies = new javax.swing.JTextField();
        publishinghouse = new javax.swing.JTextField();
        Addbook = new javax.swing.JButton();
        searchauthoridbtn = new javax.swing.JButton();
        searchcategid = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        addauthorbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        authorsearchtextfield = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        addcategorybtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        categsearchtextfield = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        categtable = new javax.swing.JTable();
        refresh = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jTabbedPane3.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1396, 816));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Book Name :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 110, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Serial Number :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 130, -1));

        bookname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(bookname, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 350, -1));

        serialnum.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(serialnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 350, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Author Id :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 90, -1));

        authorid.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorid.setEnabled(false);
        jPanel1.add(authorid, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 350, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Category Id : ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, 120, -1));

        categoryid.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categoryid.setEnabled(false);
        jPanel1.add(categoryid, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 170, 340, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Number of Copies :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, 160, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Publishing House :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 50, 160, -1));

        numofcopies.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(numofcopies, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 110, 340, -1));

        publishinghouse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(publishinghouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, 340, -1));

        Addbook.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Addbook.setText("Add Book");
        Addbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbookActionPerformed(evt);
            }
        });
        jPanel1.add(Addbook, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 140, -1));

        searchauthoridbtn.setText("Search Author Id");
        searchauthoridbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchauthoridbtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchauthoridbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, 130, -1));

        searchcategid.setText("Search Category Id");
        searchcategid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcategidActionPerformed(evt);
            }
        });
        jPanel1.add(searchcategid, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 230, 140, -1));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addauthorbtn.setText("Add Author");
        addauthorbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addauthorbtnActionPerformed(evt);
            }
        });
        jPanel2.add(addauthorbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search for Author Id / If not exists push Add Author Button");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));

        authorsearchtextfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorsearchtextfield.setPreferredSize(new java.awt.Dimension(480, 40));
        authorsearchtextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorsearchtextfieldActionPerformed(evt);
            }
        });
        authorsearchtextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                authorsearchtextfieldKeyReleased(evt);
            }
        });
        jPanel2.add(authorsearchtextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Full Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(255, 102, 102));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(2000);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 810, 350));

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 100, -1, -1));

        jTabbedPane1.addTab("tab1", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addcategorybtn.setText("Add Category");
        addcategorybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcategorybtnActionPerformed(evt);
            }
        });
        jPanel3.add(addcategorybtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Search for Category Id / If not exists push Add Category button");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        categsearchtextfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categsearchtextfield.setToolTipText("search");
        categsearchtextfield.setPreferredSize(new java.awt.Dimension(480, 40));
        categsearchtextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categsearchtextfieldKeyReleased(evt);
            }
        });
        jPanel3.add(categsearchtextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, -1, -1));

        categtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Discription"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(categtable);
        if (categtable.getColumnModel().getColumnCount() > 0) {
            categtable.getColumnModel().getColumn(0).setMaxWidth(1000);
            categtable.getColumnModel().getColumn(1).setMaxWidth(10000);
            categtable.getColumnModel().getColumn(2).setMaxWidth(30000);
        }

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 1000, 350));

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel3.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 90, -1, -1));

        jTabbedPane1.addTab("tab2", jPanel3);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 1250, 610));

        jTabbedPane3.addTab("tab2", jPanel1);

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1451, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 729, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("tab1", jPanel4);

        jPanel5.add(jTabbedPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1460, 760));

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton4.setText("Add Book");
        jPanel5.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 140, 50));

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("All Books");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 140, 50));

        jButton1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton1.setText("HOME");
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 30, -1, -1));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1460, 830));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void authorsearchtextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorsearchtextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorsearchtextfieldActionPerformed

    private void AddbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbookActionPerformed
       SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy HH:mm:ss ");
        
        
        int vcode= getlastbookid();
        int vserial= Integer.parseInt(serialnum.getText());
        String vbname= bookname.getText();
        int vauthor_id= Integer.parseInt(authorid.getText());
        int vcategory_id= Integer.parseInt(categoryid.getText());
        Timestamp timestamp= new Timestamp(System.currentTimeMillis());
        String dateee=sdf.format(timestamp);
        int vnumcopies= Integer.parseInt(numofcopies.getText());
        int vavailblecopipes =Integer.parseInt(numofcopies.getText());
        String vpublishing=publishinghouse.getText();
        
        System.out.println(dateee);
        
        try {
            insert.setInt(1, vcode);
            insert.setInt(2, vserial);
            insert.setString(3, vbname);
            insert.setInt(4, vauthor_id);
            insert.setString(5, dateee);
            insert.setInt(6,vcategory_id);
            insert.setInt(7, vnumcopies);
            insert.setString(8,vpublishing);
            insert.setInt(9,vavailblecopipes);
            insert.executeUpdate();
           
        } catch (SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex !=null){
                System.out.println("Message: "+ ex.getMessage());
                ex=ex.getNextException();
            }
        }
    }//GEN-LAST:event_AddbookActionPerformed

    private void addauthorbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addauthorbtnActionPerformed
        AuthorAdd au = new AuthorAdd();
        au.setVisible(true);
    }//GEN-LAST:event_addauthorbtnActionPerformed
    
    public void authorsearch(){
        tblModel1= (DefaultTableModel)jTable1.getModel();
        tblModel1.setRowCount(0);
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try{
            dbConn = DriverManager.getConnection (url, username, passwd);
            stat= dbConn.createStatement();
            String selectString = "select author_id, (alastname || ' ' || aname) AS CustName From author ORDER BY author_id asc";
            rs = stat.executeQuery(selectString);

            while(rs.next()) {
                    String id = String.valueOf(rs.getInt("author_id"));
                    String name = rs.getString("CustName");
                    //String lastname = rs.getString("alastname");

                    String tbData[] = {id,name};
                    
                    tblModel1.addRow(tbData);
            }
            stat.close();
            dbConn.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
    }
        
    public void categorysearch(){
        tblModel2= (DefaultTableModel)categtable.getModel();
        tblModel2.setRowCount(0);
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try{
            dbConn = DriverManager.getConnection (url, username, passwd);
            stct= dbConn.createStatement();
            String selectString = "select category_id, caname, description From category ORDER BY category_id asc";
            rs = stct.executeQuery(selectString);

            while(rs.next()) {
                    String id = String.valueOf(rs.getInt("category_id"));
                    String name = rs.getString("caname");
                    String description = rs.getString("description");

                    String tbData[] = {id,name,description};
                    
                    tblModel2.addRow(tbData);
            }
            stct.close();
            dbConn.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    
    
    private void addcategorybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcategorybtnActionPerformed
        addcategory ac= new addcategory();
        ac.setVisible(true);
    }//GEN-LAST:event_addcategorybtnActionPerformed

    private void authorsearchtextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorsearchtextfieldKeyReleased
        
            String query = authorsearchtextfield.getText().toLowerCase();
            filter1(query);
        
    }//GEN-LAST:event_authorsearchtextfieldKeyReleased

    private void categsearchtextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categsearchtextfieldKeyReleased
        String query = categsearchtextfield.getText().toLowerCase();
        filter2(query);
    }//GEN-LAST:event_categsearchtextfieldKeyReleased

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        tblModel2= (DefaultTableModel)categtable.getModel();
        tblModel2.setRowCount(0);
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try{
            dbConn = DriverManager.getConnection (url, username, passwd);
            stct= dbConn.createStatement();
            String selectString = "select category_id, caname, description From category ORDER BY category_id asc";
            rs = stct.executeQuery(selectString);

            while(rs.next()) {
                    String id = String.valueOf(rs.getInt("category_id"));
                    String name = rs.getString("caname");
                    String description = rs.getString("description");

                    String tbData[] = {id,name,description};
                    
                    tblModel2.addRow(tbData);
            }
            stct.close();
            dbConn.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        
        tblModel1= (DefaultTableModel)jTable1.getModel();
        tblModel1.setRowCount(0);
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try{
            dbConn = DriverManager.getConnection (url, username, passwd);
            stat= dbConn.createStatement();
            String selectString = "select author_id, (aname || ' ' || alastname) AS CustName From author ORDER BY author_id asc";
            rs = stat.executeQuery(selectString);

            while(rs.next()) {
                    String id = String.valueOf(rs.getInt("author_id"));
                    String name = rs.getString("CustName");
                    //String lastname = rs.getString("alastname");

                    String tbData[] = {id,name};
                    
                    tblModel1.addRow(tbData);
            }
            stat.close();
            dbConn.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        
    }//GEN-LAST:event_refreshActionPerformed

    private void searchcategidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcategidActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_searchcategidActionPerformed

    private void searchauthoridbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchauthoridbtnActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_searchauthoridbtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        tblModel2= (DefaultTableModel)categtable.getModel();
        tblModel2.setRowCount(0);
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try{
            dbConn = DriverManager.getConnection (url, username, passwd);
            stct= dbConn.createStatement();
            String selectString = "select category_id, caname, description From category ORDER BY category_id asc";
            rs = stct.executeQuery(selectString);

            while(rs.next()) {
                    String id = String.valueOf(rs.getInt("category_id"));
                    String name = rs.getString("caname");
                    String description = rs.getString("description");

                    String tbData[] = {id,name,description};
                    
                    tblModel2.addRow(tbData);
            }
            stct.close();
            dbConn.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        
        tblModel1= (DefaultTableModel)jTable1.getModel();
        tblModel1.setRowCount(0);
        try {
            Class.forName (driverClassName);
        } catch (ClassNotFoundException ex) {
        }
        try{
            dbConn = DriverManager.getConnection (url, username, passwd);
            stat= dbConn.createStatement();
            String selectString = "select author_id, (aname || ' ' || alastname) AS CustName From author ORDER BY author_id asc";
            rs = stat.executeQuery(selectString);

            while(rs.next()) {
                    String id = String.valueOf(rs.getInt("author_id"));
                    String name = rs.getString("CustName");
                    //String lastname = rs.getString("alastname");

                    String tbData[] = {id,name};
                    
                    tblModel1.addRow(tbData);
            }
            stat.close();
            dbConn.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, SQLException {
        
        

        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                    new BookAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbook;
    private javax.swing.JButton addauthorbtn;
    private javax.swing.JButton addcategorybtn;
    private javax.swing.JTextField authorid;
    private javax.swing.JTextField authorsearchtextfield;
    private javax.swing.JTextField bookname;
    private javax.swing.JTextField categoryid;
    private javax.swing.JTextField categsearchtextfield;
    private javax.swing.JTable categtable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField numofcopies;
    private javax.swing.JTextField publishinghouse;
    private javax.swing.JButton refresh;
    private javax.swing.JButton searchauthoridbtn;
    private javax.swing.JButton searchcategid;
    private javax.swing.JTextField serialnum;
    // End of variables declaration//GEN-END:variables
}
